/*
* Reversi
* Copyright (c) 2015 Nguyen Khoa Thien, Tyedmers Gï¿½rard, Jenzer Ulrich
*/
"use strict";var gameLogic=function(){var board,columns=8,rows=8,init=function(){gameLogic.initEmptyBoard(),gameLogic.setStartGame()},initEmptyBoard=function(){board=getNewGame(columns,rows,0)},showBoard=function(){console.log(board),console.log("")},getNewGame=function(cols,rows,defaultValue){for(var arr=[],i=0;rows>i;i++){arr.push([]),arr[i].push(new Array(cols));for(var j=0;cols>j;j++)arr[i][j]=defaultValue}return arr},changeObjectState=function(col,row,state,isWithUpdate,isWithAutoPlayer){0==board[col][row]?console.log("set "+col+" "+row+" to state "+state):1==board[col][row]&&2==state||2==board[col][row]&&1==state?console.log("update "+col+" "+row+" from "+board[col][row]+" to state "+state):console.log("error? "+col+" "+row+" from "+board[col][row]+" to state "+state),board[col][row]=state,isWithUpdate&&updateStates(state,col,row),isWithAutoPlayer&&moveFromComputerPlayer(1==state?2:1)},setStartGame=function(){changeObjectState(3,3,1,!1),changeObjectState(4,4,1,!1),changeObjectState(4,3,2,!1),changeObjectState(3,4,2,!1)},getPossibleMoves=function(state){for(var possibleMoves=[],i=0;columns>i;i++)for(var j=0;rows>j;j++)0==board[i][j]&&isPossibleMove(state,i,j)&&possibleMoves.push([i,j]);return possibleMoves},isPossibleMove=function(state,indexX,indexY){return isPossibleLeftTop(state,indexX,indexY,!0)||isPossibleTop(state,indexX,indexY,!0)||isPossibleRightTop(state,indexX,indexY,!0)||isPossibleLeft(state,indexX,indexY,!0)||isPossibleRight(state,indexX,indexY,!0)||isPossibleLeftBottom(state,indexX,indexY,!0)||isPossibleBottom(state,indexX,indexY,!0)||isPossibleRightBottom(state,indexX,indexY,!0)?!0:!1},updateStates=function(state,indexX,indexY,isVirtualChangeState){var updateFigures=[];return updateStateLeftTop(state,indexX,indexY,updateFigures,isVirtualChangeState),updateStateTop(state,indexX,indexY,updateFigures,isVirtualChangeState),updateStateRightTop(state,indexX,indexY,updateFigures,isVirtualChangeState),updateStateLeft(state,indexX,indexY,updateFigures,isVirtualChangeState),updateStateRight(state,indexX,indexY,updateFigures,isVirtualChangeState),updateStateLeftBottom(state,indexX,indexY,updateFigures,isVirtualChangeState),updateStateBottom(state,indexX,indexY,updateFigures,isVirtualChangeState),updateStateRightBottom(state,indexX,indexY,updateFigures,isVirtualChangeState),updateFigures},updateStateLeftTop=function(state,indexX,indexY,updateFigures,isVirtualChangeState){isPossibleLeftTop(state,indexX,indexY,!0)&&board[indexX-1][indexY-1]!=state&&(updateFigures.push([indexX-1,indexY-1]),isVirtualChangeState||changeObjectState(indexX-1,indexY-1,state),updateStateLeftTop(state,indexX-1,indexY-1,updateFigures,isVirtualChangeState))},updateStateTop=function(state,indexX,indexY,updateFigures,isVirtualChangeState){isPossibleTop(state,indexX,indexY,!0)&&board[indexX][indexY-1]!=state&&(updateFigures.push([indexX,indexY-1]),isVirtualChangeState||changeObjectState(indexX,indexY-1,state),updateStateTop(state,indexX,indexY-1,updateFigures,isVirtualChangeState))},updateStateRightTop=function(state,indexX,indexY,updateFigures,isVirtualChangeState){isPossibleRightTop(state,indexX,indexY,!0)&&board[indexX+1][indexY-1]!=state&&(updateFigures.push([indexX+1,indexY-1]),isVirtualChangeState||changeObjectState(indexX+1,indexY-1,state),updateStateRightTop(state,indexX+1,indexY-1,updateFigures,isVirtualChangeState))},updateStateLeft=function(state,indexX,indexY,updateFigures,isVirtualChangeState){isPossibleLeft(state,indexX,indexY,!0)&&board[indexX-1][indexY]!=state&&(updateFigures.push([indexX-1,indexY]),isVirtualChangeState||changeObjectState(indexX-1,indexY,state),updateStateLeft(state,indexX-1,indexY,updateFigures,isVirtualChangeState))},updateStateRight=function(state,indexX,indexY,updateFigures,isVirtualChangeState){isPossibleRight(state,indexX,indexY,!0)&&board[indexX+1][indexY]!=state&&(updateFigures.push([indexX+1,indexY]),isVirtualChangeState||changeObjectState(indexX+1,indexY,state),updateStateRight(state,indexX+1,indexY,updateFigures,isVirtualChangeState))},updateStateLeftBottom=function(state,indexX,indexY,updateFigures,isVirtualChangeState){isPossibleLeftBottom(state,indexX,indexY,!0)&&board[indexX-1][indexY+1]!=state&&(updateFigures.push([indexX-1,indexY+1]),isVirtualChangeState||changeObjectState(indexX-1,indexY+1,state),updateStateLeftBottom(state,indexX-1,indexY+1,updateFigures,isVirtualChangeState))},updateStateBottom=function(state,indexX,indexY,updateFigures,isVirtualChangeState){isPossibleBottom(state,indexX,indexY,!0)&&board[indexX][indexY+1]!=state&&(updateFigures.push([indexX,indexY+1]),isVirtualChangeState||changeObjectState(indexX,indexY+1,state),updateStateBottom(state,indexX,indexY+1,updateFigures,isVirtualChangeState))},updateStateRightBottom=function(state,indexX,indexY,updateFigures,isVirtualChangeState){isPossibleRightBottom(state,indexX,indexY,!0)&&board[indexX+1][indexY+1]!=state&&(updateFigures.push([indexX+1,indexY+1]),isVirtualChangeState||changeObjectState(indexX+1,indexY+1,state),updateStateRightBottom(state,indexX+1,indexY+1,updateFigures,isVirtualChangeState))},isPossibleLeftTop=function(state,indexX,indexY,isFirst){if(0>indexX-1||0>indexY-1)return!1;var boardState=board[indexX-1][indexY-1];return isFirst||boardState!=state?isFirst||0!=boardState?0==boardState||boardState==state?!1:isPossibleLeftTop(state,indexX-1,indexY-1,!1):!1:!0},isPossibleTop=function(state,indexX,indexY,isFirst){if(0>indexY-1)return!1;var boardState=board[indexX][indexY-1];return isFirst||boardState!=state?isFirst||0!=boardState?0==boardState||boardState==state?!1:isPossibleTop(state,indexX,indexY-1,!1):!1:!0},isPossibleRightTop=function(state,indexX,indexY,isFirst){if(indexX+1>=columns||0>indexY-1)return!1;var boardState=board[indexX+1][indexY-1];return isFirst||boardState!=state?isFirst||0!=boardState?0==boardState||boardState==state?!1:isPossibleRightTop(state,indexX+1,indexY-1,!1):!1:!0},isPossibleLeft=function(state,indexX,indexY,isFirst){if(0>indexX-1)return!1;var boardState=board[indexX-1][indexY];return isFirst||boardState!=state?isFirst||0!=boardState?0==boardState||boardState==state?!1:isPossibleLeft(state,indexX-1,indexY,!1):!1:!0},isPossibleRight=function(state,indexX,indexY,isFirst){if(indexX+1>=columns)return!1;var boardState=board[indexX+1][indexY];return isFirst||boardState!=state?isFirst||0!=boardState?0==boardState||boardState==state?!1:isPossibleRight(state,indexX+1,indexY,!1):!1:!0},isPossibleLeftBottom=function(state,indexX,indexY,isFirst){if(0>indexX-1||indexY+1>=rows)return!1;var boardState=board[indexX-1][indexY+1];return isFirst||boardState!=state?isFirst||0!=boardState?0==boardState||boardState==state?!1:isPossibleLeftBottom(state,indexX-1,indexY+1,!1):!1:!0},isPossibleBottom=function(state,indexX,indexY,isFirst){if(indexY+1>=rows)return!1;var boardState=board[indexX][indexY+1];return isFirst||boardState!=state?isFirst||0!=boardState?0==boardState||boardState==state?!1:isPossibleBottom(state,indexX,indexY+1,!1):!1:!0},isPossibleRightBottom=function(state,indexX,indexY,isFirst){if(indexX+1>=columns||indexY+1>=rows)return!1;var boardState=board[indexX+1][indexY+1];return isFirst||boardState!=state?isFirst||0!=boardState?0==boardState||boardState==state?!1:isPossibleRightBottom(state,indexX+1,indexY+1,!1):!1:!0},moveFromComputerPlayer=function(state){var possibleMoves=getPossibleMoves(state);if(possibleMoves.length>0){console.log("moveFromComputerPlayer(state="+state+")"),console.log("possibleMoves.length: "+possibleMoves.length),console.log("possibleMoves: "+possibleMoves);var randomIndex=getMoveByComputer(possibleMoves,state);return console.log("Computermove:"),changeObjectState(possibleMoves[randomIndex][0],possibleMoves[randomIndex][1],state,!0,!1),!0}return!1},getMoveByComputer=function(possibleMoves,state){function IsInArray(value,array){for(var k=0;k<array.length;k++)if(array[k][0]==value[0]&&array[k][1]==value[1])return k;return-1}if("undefined"!=typeof possibleMoves&&possibleMoves.length>0){for(var randomIndex=0,tempArray=[],i=0,len=possibleMoves.length;len>i;i++)tempArray[i]=possibleMoves[i].slice();var corners=[[0,0],[0,columns-1],[rows-1,0],[columns-1,rows-1]];return tempArray.forEach(function(posMove,i){posMove[2]=updateStates(state,posMove[0],posMove[1],!0).length}),tempArray.sort(function(a,b){return IsInArray([a[0],a[1]],corners)>-1&&IsInArray([b[0],b[1]],corners)>-1||-1==IsInArray([a[0],a[1]],corners)&&-1==IsInArray([b[0],b[1]],corners)?a[2]==b[2]?0:a[2]>b[2]?-1:1:-1==IsInArray([a[0],a[1]],corners)&&IsInArray([b[0],b[1]],corners)>-1?1:IsInArray([a[0],a[1]],corners)>-1&&-1==IsInArray([b[0],b[1]],corners)?-1:0}),randomIndex=IsInArray([tempArray[0][0],tempArray[0][1]],possibleMoves)}return-1},isGameOver=function(){return 0==getPossibleMoves(1).length&&0==getPossibleMoves(2).length?!0:!1},getFigures=function(state){for(var filtered=[],i=0;columns>i;i++)for(var j=0;rows>j;j++)board[i][j]==state&&filtered.push([i,j]);return filtered};return{init:init,initEmptyBoard:initEmptyBoard,setStartGame:setStartGame,showBoard:showBoard,changeObjectState:changeObjectState,getFigures:getFigures,getPossibleMoves:getPossibleMoves,isPossibleMove:isPossibleMove,updateStates:updateStates,moveFromComputerPlayer:moveFromComputerPlayer,getMoveByComputer:getMoveByComputer,isGameOver:isGameOver,getBoard:function(){return board}}}();gameLogic.init(),function(){var moduleApp=angular.module("ApplicationModule",[]);moduleApp.run(function($rootScope){})}(),function(){var app=angular.module("ApplicationModule");app.factory("AppConstantService",[function(){var AppConstantService=function(){var self=this;self.GAME_MAX_COLUMNS=8,self.GAME_MAX_ROWS=8},appConstantService=new AppConstantService;return appConstantService}])}(),function(){var app=angular.module("ApplicationModule");app.factory("AppSetupService",[function(){var AppSetupService=function(){var self=this;self.showPosibleStones=!1,self.localUserImageWhite="",self.localUserImageBlack="",self.inSettingPage=!1,self.saveSettings=function(){"undefined"!=typeof Storage&&"undefined"!=typeof localStorage&&(localStorage.setItem("showPosibleStones",self.showPosibleStones),localStorage.setItem("localUserImageWhite",self.localUserImageWhite),localStorage.setItem("localUserImageBlack",self.localUserImageBlack))},self.readSettings=function(){if("undefined"!=typeof Storage&&"undefined"!=typeof localStorage){var showStones=localStorage.getItem("showPosibleStones");self.showPosibleStones=JSON.parse(showStones)||!1;var localImgWhite=localStorage.getItem("localUserImageWhite");self.localUserImageWhite=localImgWhite;var localImgBlack=localStorage.getItem("localUserImageBlack");self.localUserImageBlack=localImgBlack}},self.readSettings()},appSetupService=new AppSetupService;return appSetupService}])}(),function(){var app=angular.module("ApplicationModule");app.factory("AppAuthenticationService",["AppOnlineService",function(appOnlineService){var AppAuthenticationService=function(){var self=this;self.userData={name:"",password:"",password2:""},self.appOnlineService=appOnlineService,self.register=function(){if(self.userData.name.length<=0)self.showColoredMessage("Eingabe Fehler","Kein Name eingegeben.","#e81e1a");else if(self.userData.password.length<=0)self.showColoredMessage("Eingabe Fehler","Keine Password Eingabe.","#e81e1a");else{if(self.userData.password==self.userData.password2)return self.appOnlineService.register(self.userData.name,self.userData.password),!0;self.showColoredMessage("Eingabe Fehler","Beide PasswÃ¶rter nicht gleich.","#e81e1a")}return!1},self.login=function(){return self.userData.name.length<=0?(self.showColoredMessage("Eingabe Fehler","Kein Name eingegeben.","#e81e1a"),!1):(self.appOnlineService.signIn(self.userData.name,self.userData.password),!0)},self.logout=function(){},self.showColoredMessage=function(title,message,backgroundColor){var $modal_colored_title_text_h4_id=$("#modal-colored-title-text-h4-id");$modal_colored_title_text_h4_id[0].innerHTML=title,$modal_colored_title_text_h4_id.css("background-color",backgroundColor),$("#modal-colored-body-text-p-id")[0].innerHTML=message,$("#modal-colored-dialog").modal()}},appAuthenticationService=new AppAuthenticationService;return appAuthenticationService}])}(),function(){var app=angular.module("ApplicationModule");app.factory("AppGameStateService",["$timeout","$rootScope","AppConstantService","AppAuthenticationService","AppOnlineService",function($timeout,$rootScope,appConstantService,appAuthenticationService,appOnlineService){var AppGameStateService=function(){var self=this;self.appConstantService=appConstantService,self.appAuthenticationService=appAuthenticationService,self.appOnlineService=appOnlineService,self.startWithBlack=!1,self.STONE_WHITE=1,self.STONE_BLACK=2,self.STONE_UNKOWN_STATE=3,self.STONE_WHITE_CAN_BE_PLACED=4,self.STONE_BLACK_CAN_BE_PLACED=5,self.STONE_PLACING_ERROR=6,self.isGameRunning=!1,self.isComputerGameRunning=!1,self.isOnlineGameRunning=!1,self.isOnlineComputerGameRunning=!1,self.isComputerThinkingTime=0,self.isComputerMove=!1,self.statusMessgaeText="",self.gameStartTime=new Date,self.actualPlayerIsWhite=!1,self.actualPlayerIsBlack=!1,self.actualPlayer=self.STONE_WHITE,self.wrongStone=void 0,self.gameOver=void 0,self.gameLogic=gameLogic,self.initStoneState=function(){self.gameLogic.init()},self.setStoneStateError=function(xindex,yindex){self.wrongStone={x:xindex,y:yindex}},self.setStoneState=function(xindex,yindex,withoutCheck){if(void 0===withoutCheck&&(withoutCheck=!1),0>xindex||xindex>=self.appConstantService.GAME_MAX_COLUMNS)return void console.log("self.setStoneState(... xindex="+xindex+" ...) out of range.");if(0>yindex||yindex>=self.appConstantService.GAME_MAX_ROWS)return void console.log("self.setStoneState(... yindex="+yindex+" ...) out of range.");var siPossible=self.gameLogic.isPossibleMove(self.actualPlayer,xindex,yindex);siPossible||withoutCheck?(self.gameLogic.changeObjectState(xindex,yindex,self.actualPlayer,!0,!1),self.wrongStone=void 0):self.setStoneStateError(xindex,yindex)},self.getStoneState=function(xindex,yindex){if(0>xindex||xindex>=self.appConstantService.GAME_MAX_COLUMNS)return void console.log("self.getStoneState(... xindex="+xindex+" ...) out of range.");if(0>yindex||yindex>=self.appConstantService.GAME_MAX_ROWS)return void console.log("self.getStoneState(... yindex="+yindex+" ...) out of range.");var rBoard=self.gameLogic.getBoard(),state=rBoard[xindex][yindex];if(0==state)for(var moves=self.gameLogic.getPossibleMoves(self.actualPlayer),itemx=0;itemx<moves.length;itemx++)for(var iy=0;iy<moves[itemx].length;iy++)if(xindex==moves[itemx][0]&&yindex==moves[itemx][1]){state=self.actualPlayer==self.STONE_WHITE?self.STONE_WHITE_CAN_BE_PLACED:self.STONE_BLACK_CAN_BE_PLACED;break}return 0==state&&void 0!==self.wrongStone&&xindex==self.wrongStone.x&&yindex==self.wrongStone.y&&(state=6),state},self.isWhiteLayingPossible=function(xindex,yindex){for(var result=!1,moves=self.gameLogic.getPossibleMoves(self.actualPlayer),itemx=0;itemx<moves.length;itemx++)for(var iy=0;iy<moves[itemx].length;iy++)if(xindex==moves[itemx][0]&&yindex==moves[itemx][1]){result=self.actualPlayer===self.STONE_WHITE;break}return result},self.isBlackLayingPossible=function(xindex,yindex){for(var result=!1,moves=self.gameLogic.getPossibleMoves(self.actualPlayer),itemx=0;itemx<moves.length;itemx++)for(var iy=0;iy<moves[itemx].length;iy++)if(xindex==moves[itemx][0]&&yindex==moves[itemx][1]){result=self.actualPlayer!==self.STONE_WHITE;break}return result},self.eventTrySetStone=function(eventIndex,fromOnlinePlayer){var xindex=eventIndex%8,yindex=Math.floor(eventIndex/8);if(void 0===fromOnlinePlayer&&(fromOnlinePlayer=!1),self.isOnlineGameRunning&&!fromOnlinePlayer){if(self.appOnlineService.onlineStartPlayer&&self.actualPlayerIsBlack)return console.log("self.eventTrySetStone(online && Withe)."),void self.setStoneStateError(xindex,yindex);if(self.appOnlineService.onlineStartOpponent&&self.actualPlayerIsWhite)return console.log("self.eventTrySetStone(online && Black)."),void self.setStoneStateError(xindex,yindex)}if(0>eventIndex||eventIndex>=self.appConstantService.GAME_MAX_COLUMNS*self.appConstantService.GAME_MAX_ROWS)return void console.log("self.eventTrySetStone("+eventIndex+") out of range.");if(self.actualPlayerIsWhite&&self.startWithBlack&&self.isComputerGameRunning)return void console.log("self.eventTrySetStone("+eventIndex+"), the computer is in the game.");if(self.actualPlayerIsBlack&&!self.startWithBlack&&self.isComputerGameRunning)return void console.log("self.eventTrySetStone("+eventIndex+"), the computer is in the game.");var actState=self.getStoneState(xindex,yindex);return actState==self.STONE_WHITE||actState==self.STONE_BLACK?void console.log("it is already a stone at the site."):void(self.actualPlayerIsWhite?self.isWhiteLayingPossible(xindex,yindex)||fromOnlinePlayer?(self.setStoneState(xindex,yindex,fromOnlinePlayer),self.isOnlineGameRunning&&!fromOnlinePlayer&&self.appOnlineService.play(yindex,xindex),self.setActualPlayerToBlack(),self.isComputerGameRunning&&!self.startWithBlack&&self.startComputerMove()):self.setStoneStateError(xindex,yindex):self.actualPlayerIsBlack&&(self.isBlackLayingPossible(xindex,yindex)||fromOnlinePlayer?(self.setStoneState(xindex,yindex,fromOnlinePlayer),self.isOnlineGameRunning&&!fromOnlinePlayer&&self.appOnlineService.play(yindex,xindex),self.setActualPlayerToWhite(),self.isComputerGameRunning&&self.startWithBlack&&self.startComputerMove()):self.setStoneStateError(xindex,yindex)))},self.setActualPlayerToWhite=function(){self.actualPlayer=self.STONE_WHITE,self.actualPlayerIsWhite=!0,self.actualPlayerIsBlack=!1},self.setActualPlayerToBlack=function(){self.actualPlayer=self.STONE_BLACK,self.actualPlayerIsWhite=!1,self.actualPlayerIsBlack=!0},self.startInitGame=function(){self.gameStartTime=new Date,self.startWithBlack?(self.setActualPlayerToBlack(),self.initStoneState()):(self.setActualPlayerToWhite(),self.initStoneState()),self.isGameRunning=!0,self.isComputerGameRunning=!1,self.isComputerThinkingTime=0,self.isComputerMove=!1,self.isOnlineGameRunning=!1,self.isOnlineComputerGameRunning=!1,self.statusMessgaeText="",self.wrongStone=void 0,self.gameOver=void 0},self.startTowPlayerGame=function(){self.startInitGame()},self.startGameWithComputer=function(){self.startInitGame(),self.isComputerGameRunning=!0},self.startOnlineGame=function(playerMode){self.startInitGame(),self.isOnlineGameRunning=!0,self.setActualPlayerToWhite()},self.isTheGameOver=function(){var moves1=self.gameLogic.getPossibleMoves(self.actualPlayer);if(moves1.length>0)self.gameOver=void 0;else{var otherPlayer=self.actualPlayer===self.STONE_WHITE?self.STONE_BLACK:self.STONE_WHITE;void 0===self.gameOver&&(self.gameOver={actual:self.actualPlayer,other:otherPlayer});var moves3=self.gameLogic.getPossibleMoves(otherPlayer);if(!(moves3.length>0))return!0;otherPlayer===self.STONE_WHITE?self.setActualPlayerToWhite():(self.setActualPlayerToBlack(),self.startComputerMove()),$rootScope.$broadcast("update-card-layout")}return!1},self.startComputerMove=function(){self.isComputerThinkingTime=4,self.isComputerMove=!0},self.timerHandler=function(){var msg,name,password,gamesWon;if(self.isGameRunning){var newDate=new Date,runTime=((newDate.getTime()-self.gameStartTime.getTime())/1e3).toFixed(0),gmtp="Zweispieler Spiel - ";if(self.isComputerGameRunning?gmtp="Spiel mit Computer -  ":self.isOnlineGameRunning?gmtp="Spiel Online-Gegner - ":self.isOnlineComputerGameRunning&&(gmtp="online to computer -  "),self.statusMessgaeText="",msg=""+runTime,self.statusMessgaeText=gmtp+msg+" sec.",self.isComputerThinkingTime>0&&(self.statusMessgaeText="Der Computer denkt nach...",self.isComputerThinkingTime--),self.isComputerThinkingTime<=0&&self.isComputerMove){self.isComputerMove=!1;var actCompState=self.startWithBlack?self.STONE_WHITE:self.STONE_BLACK,moves=self.gameLogic.getPossibleMoves(self.actualPlayer);console.log("self.gameLogic.moveFromComputerPlayer("+actCompState+"), self.actualPlayer: "+self.actualPlayer+", moves.length: "+moves.length),self.gameLogic.moveFromComputerPlayer(actCompState),self.startWithBlack?self.setActualPlayerToBlack():self.setActualPlayerToWhite(),$rootScope.$broadcast("update-card-layout")}if(self.isTheGameOver()){var whiteStones=self.gameLogic.getFigures(self.STONE_WHITE),blackStones=self.gameLogic.getFigures(self.STONE_BLACK);msg=whiteStones.length>blackStones.length?"Weiss":"Schwarz",$("#modal-title-text-h4-id")[0].innerHTML="Der Gewinner ist: "+msg,whiteStones.length==blackStones.length&&($("#modal-title-text-h4-id")[0].innerHTML="Unentschieden "),msg+=" gewinnt mit "+Math.abs(whiteStones.length-blackStones.length)+" Steinen Vorsprung. <br><br>",whiteStones.length==blackStones.length&&(msg="Das Spiel endet Unentschieden. <br><br>"),msg+="  Weiss="+whiteStones.length+"<br  > Schwarz="+blackStones.length,$("#modal-body-text-p-id")[0].innerHTML=msg,$("#modal-dialog").modal(),self.isGameRunning=!1,console.log("self.timerHandler() { self.isTheGameOver(): "+msg),self.isOnlineGameRunning?(self.appOnlineService.onlineStartPlayer&&(console.log("self.eventTrySetStone(online && Withe)."),name=self.appAuthenticationService.userData.name,password=self.appAuthenticationService.userData.password,gamesWon=whiteStones.length>blackStones.length?1:0,self.appOnlineService.rankingUpdate(name,password,gamesWon,whiteStones.length),console.log("(self.appOnlineService.onlineStartPlayer) self.rankingUpdate("+name+", "+password+", "+gamesWon+", "+blackStones.length+")")),self.appOnlineService.onlineStartOpponent&&(name=self.appAuthenticationService.userData.name,password=self.appAuthenticationService.userData.password,gamesWon=blackStones.length>whiteStones.length?1:0,self.appOnlineService.rankingUpdate(name,password,gamesWon,blackStones.length),console.log("(self.appOnlineService.onlineStartOpponent) self.rankingUpdate("+name+", "+password+", "+gamesWon+", "+blackStones.length+")")),self.appOnlineService.stopPlay(),$rootScope.$broadcast("stopPlay"),console.log("(self.appOnlineService.onlineStartOpponent) stopPlay()")):($rootScope.$broadcast("stopPlay"),console.log("(local or computer stopPlay()"))}}else self.statusMessgaeText="bereit";$("#game-player-status-p-id")[0].innerHTML=self.statusMessgaeText,$timeout(self.timerHandler,333)},$timeout(self.timerHandler,1e3)},appGameStateService=new AppGameStateService;return appGameStateService}])}(),function(){var app=angular.module("ApplicationModule");app.factory("AppScreenService",["$window","AppSetupService","AppStatisticService","AppGameStateService","AppOnlineService",function($window,appSetupService,appStatisticService,appGameStateService,appOnlineService){var AppScreenService=function(){function handleFiles(){self.fileDisplayArea=document.getElementById("file-display-area"),self.fileLocalUserImg=document.getElementById("local-user-img-id");var filesToUpload=document.getElementById("getimage").files,file=filesToUpload[0],reader=new FileReader;reader.onload=function(e){self.fileLocalUserImg.onload=function(){self.fileLocalUserImg.onload=null,self.appSetupService.localUserImageWhite=self.resizeLoadedImage(self.fileLocalUserImg)},self.fileLocalUserImg.src=e.target.result},reader.readAsDataURL(file)}function handleFiles2(){self.fileDisplayArea2=document.getElementById("file-display-area-2"),self.fileLocalUserImg2=document.getElementById("local-user-img-id-2");var filesToUpload=document.getElementById("getimage-2").files,file=filesToUpload[0],reader=new FileReader;reader.onload=function(e){self.fileLocalUserImg2.onload=function(){self.fileLocalUserImg2.onload=null,self.appSetupService.localUserImageBlack=self.resizeLoadedImage(self.fileLocalUserImg2)},self.fileLocalUserImg2.src=e.target.result},reader.readAsDataURL(file)}var self=this;self.appSetupService=appSetupService,self.appStatisticService=appStatisticService,self.appGameStateService=appGameStateService,self.appOnlineService=appOnlineService,self.lastScreenSwitch="",self.resizeGameEx=function(minMargin){var newWidth,newHeight,gameSize={width:800,height:1100,safeWidth:800,safeHeight:1100},viewport={width:window.innerWidth-2*minMargin,height:window.innerHeight-2*minMargin};gameSize.height/gameSize.width>viewport.height/viewport.width?gameSize.safeHeight/gameSize.width>viewport.height/viewport.width?(newHeight=viewport.height*gameSize.height/gameSize.safeHeight,newWidth=newHeight*gameSize.width/gameSize.height):(newWidth=viewport.width,newHeight=newWidth*gameSize.height/gameSize.width):gameSize.height/gameSize.safeWidth>viewport.height/viewport.width?(newHeight=viewport.height,newWidth=newHeight*gameSize.width/gameSize.height):(newWidth=viewport.width*gameSize.width/gameSize.safeWidth,newHeight=newWidth*gameSize.height/gameSize.width);var gsr={};return gsr.gameSizeWidth=newWidth,gsr.gameSizeHeight=newHeight,gsr.gameX=(viewport.width-newWidth)/2+minMargin,gsr.gameY=(viewport.height-newHeight)/2+minMargin,gsr},self.resizeGameField=function(gsr){var left=0,logoHeight=$("#game-logo-id").height(),stoneHeight=gsr.gameSizeWidth,statusHeight=24,infoHeight=gsr.gameSizeHeight-(stoneHeight+statusHeight+logoHeight),infoTop=logoHeight,stoneTop=infoTop+infoHeight,statusTop=stoneTop+stoneHeight,$game_player_info_id=$("#game-player-info-id"),$game_player_stone_field_id=$("#game-player-stone-field-id"),$game_player_status_id=$("#game-player-status-id");$game_player_info_id.css("width",""+gsr.gameSizeWidth+"px"),$game_player_info_id.css("height",""+infoHeight+"px"),$game_player_info_id.css("left",""+left+"px"),$game_player_info_id.css("top",""+infoTop+"px"),$game_player_stone_field_id.css("width",""+gsr.gameSizeWidth+"px"),$game_player_stone_field_id.css("height",""+stoneHeight+"px"),$game_player_stone_field_id.css("left",""+left+"px"),$game_player_stone_field_id.css("top",""+stoneTop+"px"),$game_player_status_id.css("width",""+gsr.gameSizeWidth+"px"),$game_player_status_id.css("height",""+statusHeight+"px"),$game_player_status_id.css("left",""+left+"px"),$game_player_status_id.css("top",""+statusTop+"px")},self.resizeHtmlElements=function(gsr){var $startup_menu_img=$(".startup-menu-img"),$img_player_info=$(".img-player-info"),$img_player_stone=$(".img-player-stone"),$img_player_status=$(".img-player-status"),$text_player_info=$(".text-player-info");gsr.gameSizeWidth<340?($startup_menu_img.css("margin-right","1px"),$startup_menu_img.css("height","12px")):gsr.gameSizeWidth<400?($startup_menu_img.css("margin-right","5px"),$startup_menu_img.css("height","16px")):gsr.gameSizeWidth<500?($startup_menu_img.css("margin-right","20px"),$startup_menu_img.css("height","32px")):($startup_menu_img.css("margin-right","50px"),$startup_menu_img.css("height","64px"));var setupWidth=$(".setup-screen").width()-30;$(".btn-setup").css("max-width",""+setupWidth+"px");var infoHeight=$("#game-player-info-id").height(),fontSize=.2*infoHeight,playerImgHeight=infoHeight-2-1.05*fontSize,stoneImgHeight=playerImgHeight,statusImgHeight=playerImgHeight,playerImgWidth=.75*playerImgHeight;$img_player_info.css("width",""+playerImgWidth+"px"),$img_player_info.css("height",""+playerImgHeight+"px"),$img_player_stone.css("width",""+stoneImgHeight+"px"),$img_player_stone.css("height",""+stoneImgHeight+"px"),$img_player_status.css("width",""+statusImgHeight+"px"),$img_player_status.css("height",""+statusImgHeight+"px"),$("#img-player-stone-left-id").css("left",""+(playerImgWidth+3)+"px"),$("#img-player-stone-right-id").css("right",""+(playerImgWidth+3)+"px"),$("#img-player-status-left-id").css("left",""+(playerImgWidth+stoneImgHeight+3)+"px"),$("#img-player-status-right-id").css("right",""+(playerImgWidth+stoneImgHeight+3)+"px"),$("#text-player-info-left-id").css("left","3px"),$("#text-player-info-right-id").css("right","3px");var textPlayerinfoY=infoHeight+2-1.4*fontSize;$text_player_info.css("top",""+textPlayerinfoY+"px"),$text_player_info.css("font-size",""+fontSize+"px")},self.resizeHelpText=function(gsr){var helpHeight=$("#help-screen-id").height(),fontSize=.2*helpHeight;fontSize=gsr.gameSizeWidth<250?"8px":gsr.gameSizeWidth<290?"9px":gsr.gameSizeWidth<310?"10px":gsr.gameSizeWidth<340?"11px":gsr.gameSizeWidth<380?"12px":gsr.gameSizeWidth<430?"14px":gsr.gameSizeWidth<500?"16px":"18px",$("#help-text-id").css("font-size",fontSize)},self.resizeHandler=function(){var minMargin=0,gsr=self.resizeGameEx(minMargin),$game_logo_id=$("#game-logo-id"),$central_rectangle_id=$("#central-rectangle-id"),$switch_area_screen=$(".switch-area-screen");$(".container-game").css("width",""+gsr.gameSizeWidth+"px"),$game_logo_id.css("width",""+(gsr.gameSizeWidth-3)+"px"),$game_logo_id.css("height","62px"),$central_rectangle_id.css("width",""+gsr.gameSizeWidth+"px"),$central_rectangle_id.css("height",""+gsr.gameSizeHeight+"px"),$central_rectangle_id.css("left",""+gsr.gameX+"px"),$central_rectangle_id.css("top",""+gsr.gameY+"px");var gameLogoHeight=$game_logo_id.height()+3,gameScreenHeight=gsr.gameSizeHeight-gameLogoHeight;$switch_area_screen.css("height",""+gameScreenHeight+"px"),$switch_area_screen.css("top",""+gameLogoHeight+"px"),self.resizeGameField(gsr),self.resizeHtmlElements(gsr),self.resizeHelpText(gsr)},self.switchToScreen=function(onId,lastGameMode,goBackMode){var img,imgSrc,isVisibleScreen=!$("#"+onId).is(":hidden"),$header_img_info_id=$("#header-img-info-id"),$header_img_setup_id=$("#header-img-setup-id"),$header_img_statistic_id=$("#header-img-statistic-id"),$startup_screen_id=$("#startup-screen-id"),$game_screen_id=$("#game-screen-id");if(goBackMode=goBackMode||!1,!isVisibleScreen||goBackMode||"help-screen-id"!==onId&&"setup-screen-id"!==onId&&"statistic-screen-id"!==onId){$header_img_info_id.css("background-color",""),$header_img_setup_id.css("background-color",""),$header_img_statistic_id.css("background-color",""),$startup_screen_id.hide(),$("#help-screen-id").hide(),$("#setup-screen-id").hide(),$("#statistic-screen-id").hide(),$("#login-screen-id").hide(),$("#register-screen-id").hide(),$("#wait-online-game-screen-id").hide(),$game_screen_id.hide(),isVisibleScreen||"help-screen-id"!==onId||$header_img_info_id.css("background-color","#DDDDDD"),isVisibleScreen||"setup-screen-id"!==onId||$header_img_setup_id.css("background-color","#DDDDDD"),isVisibleScreen||"statistic-screen-id"!==onId?self.appStatisticService.inStatisticPage=!1:($header_img_statistic_id.css("background-color","#DDDDDD"),self.appStatisticService.inStatisticPage=!0,void 0===self.appOnlineService.socket?self.appOnlineService.connect():self.appOnlineService.ranking());var isGameRun=self.appGameStateService.isGameRunning||!1;if(isGameRun&&isVisibleScreen&&void 0!==lastGameMode&&lastGameMode.length>0?$game_screen_id.show():isGameRun&&isVisibleScreen||goBackMode?$startup_screen_id.show():$("#"+onId).show(),self.appSetupService.inSettingPage&&(self.appSetupService.saveSettings(),self.appSetupService.inSettingPage=!1),"setup-screen-id"===onId){try{self.appSetupService.localUserImageWhite.length>0&&(img=$("#local-user-img-id"),imgSrc=img.attr("src"),imgSrc!=self.appSetupService.localUserImageWhite&&"null"!=self.appSetupService.localUserImageWhite&&img.attr("src",self.appSetupService.localUserImageWhite)),self.appSetupService.localUserImageBlack.length>0&&(img=$("#local-user-img-id-2"),imgSrc=img.attr("src"),imgSrc!=self.appSetupService.localUserImageBlack&&"null"!=self.appSetupService.localUserImageBlack&&img.attr("src",self.appSetupService.localUserImageBlack))}catch(e){console.log("exception in if (onId === 'setup-screen-id')  exception: "+e)}self.appSetupService.inSettingPage=!0}self.lastScreenSwitch=onId}},self.updatePlayerImages=function(){var img,imgSrc;try{null!=self.appSetupService.localUserImageWhite&&self.appSetupService.localUserImageWhite.length>0&&(img=$("#img-left-player-info-local-id"),imgSrc=img.attr("src"),imgSrc!=self.appSetupService.localUserImageWhite&&"null"!=self.appSetupService.localUserImageWhite&&img.attr("src",self.appSetupService.localUserImageWhite))}catch(e){console.log("exception in if (onId === 'setup-screen-id')  exception: "+e)}try{null!=self.appSetupService.localUserImageBlack&&self.appSetupService.localUserImageBlack.length>0&&(img=$("#img-right-player-info-local-id"),
imgSrc=img.attr("src"),imgSrc!=self.appSetupService.localUserImageBlack&&"null"!=self.appSetupService.localUserImageBlack&&img.attr("src",self.appSetupService.localUserImageBlack))}catch(e){console.log("exception in if (onId === 'setup-screen-id')  exception: "+e)}},self.switchToLocalMode=function(){$("#img-left-player-info-local-id").show(),$("#img-left-player-info-computer-id").hide(),$("#img-left-player-info-online-id").hide(),$("#img-right-player-info-local-id").show(),$("#img-right-player-info-computer-id").hide(),$("#img-right-player-info-online-id").hide(),self.updatePlayerImages()},self.switchToComputerMode=function(){$("#img-left-player-info-local-id").show(),$("#img-left-player-info-computer-id").hide(),$("#img-left-player-info-online-id").hide(),$("#img-right-player-info-local-id").hide(),$("#img-right-player-info-computer-id").show(),$("#img-right-player-info-online-id").hide(),self.updatePlayerImages()},self.switchToOnlineMode=function(playerMode){"StartPlayer"===playerMode?($("#img-left-player-info-local-id").show(),$("#img-left-player-info-computer-id").hide(),$("#img-left-player-info-online-id").hide(),$("#img-right-player-info-local-id").hide(),$("#img-right-player-info-computer-id").hide(),$("#img-right-player-info-online-id").show()):($("#img-left-player-info-local-id").hide(),$("#img-left-player-info-computer-id").hide(),$("#img-left-player-info-online-id").show(),$("#img-right-player-info-local-id").show(),$("#img-right-player-info-computer-id").hide(),$("#img-right-player-info-online-id").hide()),self.updatePlayerImages()},self.setOnlinePlayerImage=function(pic){var img=$("#img-left-player-info-online-id"),imgSrc=img.attr("src");null!=pic&&"null"!=pic&&imgSrc!=pic&&img.attr("src",pic)},self.setOnlineOpponentImage=function(pic){var img=$("#img-right-player-info-online-id"),imgSrc=img.attr("src");null!=pic&&"null"!=pic&&imgSrc!=pic&&img.attr("src",pic)},self.imageBlinkingOn=!1,self.imageBlinkingId=0,self.imageBlinking=function(){self.playersLeftTurnOn,self.playersRightTurnOn&&$(".img-player-status-right").fadeOut(100).fadeIn(100),self.imageBlinkingOn?self.imageBlinkingId=setTimeout(self.imageBlinking,1e3):self.imageBlinkingId=0},self.imageBlinkingStart=function(){0===self.imageBlinkingId&&(self.imageBlinkingId=setTimeout(self.imageBlinking,1e3)),self.imageBlinkingOn=!0},self.imageBlinkingStop=function(){self.imageBlinkingOn=!1},self.playersLeftTurnOn=!1,self.playersRightTurnOn=!1,self.playersRightTurn=function(){self.playersLeftTurnOn=!1,self.playersRightTurnOn=!0,$(".img-player-status-left").hide(),$(".img-player-status-right").show()},self.playersLeftTurn=function(){self.playersLeftTurnOn=!0,self.playersRightTurnOn=!1,$(".img-player-status-left").show(),$(".img-player-status-right").hide()},self.playersStop=function(){self.playersLeftTurnOn=!1,self.playersRightTurnOn=!1,$(".img-player-status-left").hide(),$(".img-player-status-right").hide()},self.fileInput=document.getElementById("getimage"),self.fileInput.addEventListener("change",handleFiles),self.fileInput2=document.getElementById("getimage-2"),self.fileInput2.addEventListener("change",handleFiles2),self.resizeLoadedImage=function(flieLocImg){var canvas=document.createElement("canvas"),ctx=canvas.getContext("2d");ctx.drawImage(flieLocImg,0,0);var MAX_WIDTH=90,MAX_HEIGHT=120,width=flieLocImg.width,height=flieLocImg.height;width>height?width>MAX_WIDTH&&(height*=MAX_WIDTH/width,width=MAX_WIDTH):height>MAX_HEIGHT&&(width*=MAX_HEIGHT/height,height=MAX_HEIGHT),canvas.width=width,canvas.height=height,ctx.drawImage(flieLocImg,0,0,width,height);var localUserImage=canvas.toDataURL("image/png");return flieLocImg.src=localUserImage,localUserImage}},appScreenService=new AppScreenService;return appScreenService}])}(),function(){var app=angular.module("ApplicationModule");app.factory("AppCardGameService",["$timeout","AppConstantService","AppSetupService","AppGameStateService",function($timeout,appConstantService,appSetupService,appGameStateService){var AppCardGameService=function(){var self=this;self.appConstantService=appConstantService,self.appGameStateService=appGameStateService,self.appSetupService=appSetupService,self.gameResources={},self.gameResources.stones=["./images/empty.svg","./images/white_stone.svg","./images/black_stone.svg","./images/help.png","./images/ok.svg","./images/wrong.svg"],self.gameResources.stoneDivContainerId=[],self.gameResources.stoneX=[],self.gameResources.stoneY=[],self.gameResources.stoneWidth=[],self.gameResources.stoneHeight=[],self.gameResources.stoneMaxCol=self.appConstantService.GAME_MAX_COLUMNS,self.gameResources.stoneMaxRow=self.appConstantService.GAME_MAX_ROWS,self.gameResources.stoneMargin=3,self.gameResources.maxImageCount=self.gameResources.stoneMaxCol*self.gameResources.stoneMaxRow,self.gameResources.stoneId0=[],self.gameResources.stoneId1=[],self.gameResources.stoneId2=[],self.gameResources.stoneId3=[],self.gameResources.stoneId4=[],self.gameResources.stoneId5=[];for(var i=0;i<self.gameResources.maxImageCount;i++){var xnr=i%self.gameResources.stoneMaxCol,ynr=Math.floor(i/self.gameResources.stoneMaxCol);self.gameResources.stoneDivContainerId.push("div-image-pair-area-"+xnr+ynr),self.gameResources.stoneId0.push("stone-0-"+xnr+ynr),self.gameResources.stoneId1.push("stone-1-"+xnr+ynr),self.gameResources.stoneId2.push("stone-2-"+xnr+ynr),self.gameResources.stoneId3.push("stone-3-"+xnr+ynr),self.gameResources.stoneId4.push("stone-4-"+xnr+ynr),self.gameResources.stoneId5.push("stone-5-"+xnr+ynr);var html="";html+="<div id='"+self.gameResources.stoneDivContainerId[i]+"'>\n",html+="  <img id='"+self.gameResources.stoneId0[i]+"'",html+=" class='pair-flip-image pair-flip-image-front' src='"+self.gameResources.stones[0]+"' />\n",html+="  <img id='"+self.gameResources.stoneId1[i]+"'",html+=" class='pair-flip-image pair-flip-image-back' src='"+self.gameResources.stones[1]+"' />\n",html+="  <img id='"+self.gameResources.stoneId2[i]+"'",html+=" class='pair-flip-image pair-flip-image-back' src='"+self.gameResources.stones[2]+"' />\n",html+="  <img id='"+self.gameResources.stoneId3[i]+"'",html+=" class='pair-flip-image pair-flip-image-back' src='"+self.gameResources.stones[3]+"' />\n",html+="  <img id='"+self.gameResources.stoneId4[i]+"'",html+=" class='pair-flip-image pair-flip-image-back' src='"+self.gameResources.stones[4]+"' />\n",html+="  <img id='"+self.gameResources.stoneId5[i]+"'",html+=" class='pair-flip-image pair-flip-image-back' src='"+self.gameResources.stones[5]+"' />\n",html+="</div>\n",$(html).appendTo($("#game-player-stone-field-id")),self.gameResources.stoneX.push(0),self.gameResources.stoneY.push(0),self.gameResources.stoneWidth.push(0),self.gameResources.stoneHeight.push(0)}self.switchOffAllBackImages=function(){var allBackImgs=$(".pair-flip-image-back");allBackImgs.each(function(index,item){}),allBackImgs.css("visibility","hidden");var allFrontImgs=$(".pair-flip-image-front");allFrontImgs.each(function(index,item){}),allFrontImgs.css("visibility","visible")},self.switchOffAllBackImages(),self.resize=function(){var i,$game_player_stone_field_id=$("#game-player-stone-field-id"),stoneDy=$("#game-player-info-id").height();self.gameResources.areaGameWidth=$game_player_stone_field_id.width(),self.gameResources.areaGameHeight=$game_player_stone_field_id.height();var stoneWidth=(self.gameResources.areaGameWidth-self.gameResources.stoneMargin)/self.gameResources.stoneMaxCol-self.gameResources.stoneMargin,stoneHeight=(self.gameResources.areaGameHeight-self.gameResources.stoneMargin)/self.gameResources.stoneMaxRow-self.gameResources.stoneMargin;for(i=0;i<self.gameResources.maxImageCount;i++){var px=self.gameResources.stoneMargin+i%self.gameResources.stoneMaxCol*(stoneWidth+self.gameResources.stoneMargin),py=self.gameResources.stoneMargin+Math.floor(i/self.gameResources.stoneMaxCol)*(stoneHeight+self.gameResources.stoneMargin);self.gameResources.stoneX[i]=px,self.gameResources.stoneY[i]=py+stoneDy,self.gameResources.stoneWidth[i]=stoneWidth,self.gameResources.stoneHeight[i]=stoneHeight}for(i=0;i<self.gameResources.maxImageCount;i++){var stoneId0=$("#"+self.gameResources.stoneId0[i]),stoneId1=$("#"+self.gameResources.stoneId1[i]),stoneId2=$("#"+self.gameResources.stoneId2[i]),stoneId3=$("#"+self.gameResources.stoneId3[i]),stoneId4=$("#"+self.gameResources.stoneId4[i]),stoneId5=$("#"+self.gameResources.stoneId5[i]);stoneId0.css({position:"absolute",left:self.gameResources.stoneX[i],top:self.gameResources.stoneY[i]}),stoneId1.css({position:"absolute",left:self.gameResources.stoneX[i],top:self.gameResources.stoneY[i]}),stoneId2.css({position:"absolute",left:self.gameResources.stoneX[i],top:self.gameResources.stoneY[i]}),stoneId3.css({position:"absolute",left:self.gameResources.stoneX[i],top:self.gameResources.stoneY[i]}),stoneId4.css({position:"absolute",left:self.gameResources.stoneX[i],top:self.gameResources.stoneY[i]}),stoneId5.css({position:"absolute",left:self.gameResources.stoneX[i],top:self.gameResources.stoneY[i]}),stoneId0.css({height:self.gameResources.stoneHeight[i],width:self.gameResources.stoneWidth[i]}),stoneId1.css({height:self.gameResources.stoneHeight[i],width:self.gameResources.stoneWidth[i]}),stoneId2.css({height:self.gameResources.stoneHeight[i],width:self.gameResources.stoneWidth[i]}),stoneId3.css({height:self.gameResources.stoneHeight[i],width:self.gameResources.stoneWidth[i]}),stoneId4.css({height:self.gameResources.stoneHeight[i],width:self.gameResources.stoneWidth[i]}),stoneId5.css({height:self.gameResources.stoneHeight[i],width:self.gameResources.stoneWidth[i]})}},self.resizeCardLayout=function(){self.resize()},self.updateCardLayout=function(){for(var maxStone=self.appConstantService.GAME_MAX_COLUMNS*self.appConstantService.GAME_MAX_ROWS,idx=0;maxStone>idx;idx++){var stoneId0=self.gameResources.stoneId0[idx],stoneId1=self.gameResources.stoneId1[idx],stoneId2=self.gameResources.stoneId2[idx],stoneId3=self.gameResources.stoneId3[idx],stoneId4=self.gameResources.stoneId4[idx],imgVis0=$(".pair-flip-image#"+stoneId0).css("visibility"),imgVis1=$(".pair-flip-image#"+stoneId1).css("visibility"),imgVis2=$(".pair-flip-image#"+stoneId2).css("visibility"),imgVis3=$(".pair-flip-image#"+stoneId3).css("visibility"),imgVis4=$(".pair-flip-image#"+stoneId4).css("visibility"),visActiveNr=-1;visActiveNr="visible"===imgVis0?0:"visible"===imgVis1?1:"visible"===imgVis2?2:"visible"===imgVis3?3:"visible"===imgVis4?4:5;var xindex=idx%8,yindex=Math.floor(idx/8),stateNr=-1,state=self.appGameStateService.getStoneState(xindex,yindex);switch(state){default:stateNr=0;break;case 1:stateNr=1;break;case 2:stateNr=2;break;case 3:stateNr=3;break;case 4:stateNr=4;break;case 5:stateNr=4;break;case 6:stateNr=5}visActiveNr!=stateNr&&(stateNr==self.appGameStateService.STONE_WHITE||stateNr==self.appGameStateService.STONE_BLACK?self.doAnimationTo(idx,stateNr):4==stateNr?self.appSetupService.showPosibleStones?self.doImageSwitch(xindex,yindex,stateNr):self.doImageSwitch(xindex,yindex,0):self.doImageSwitch(xindex,yindex,stateNr))}},self.doAnimation=function(toIndex,stoneIndex,stoneId0,stoneId1,stoneId2,stoneId3,stoneId4,stoneId5){var imgVis0=$(".pair-flip-image#"+stoneId0).css("visibility"),imgVis1=$(".pair-flip-image#"+stoneId1).css("visibility"),imgVis2=$(".pair-flip-image#"+stoneId2).css("visibility"),imgVis3=$(".pair-flip-image#"+stoneId3).css("visibility"),imgVis4=$(".pair-flip-image#"+stoneId4).css("visibility"),visActive=void 0;visActive="visible"===imgVis0?"#"+stoneId0:"visible"===imgVis1?"#"+stoneId1:"visible"===imgVis2?"#"+stoneId2:"visible"===imgVis3?"#"+stoneId3:"visible"===imgVis4?"#"+stoneId4:"#"+stoneId5;var visNext=void 0;switch(toIndex){default:visNext="#"+stoneId0;break;case 1:visNext="#"+stoneId1;break;case 2:visNext="#"+stoneId2;break;case 3:visNext="#"+stoneId3;break;case 4:visNext="#"+stoneId4;break;case 5:visNext="#"+stoneId5}var iw=self.gameResources.stoneWidth[stoneIndex],iw2=(iw-2)/2,pleftmid=self.gameResources.stoneX[stoneIndex]+iw2;$(visActive).animate({left:"+="+iw2+"px",width:"2px"},{queue:!0,duration:300,start:function(){},progress:function(animation,progress){},complete:function(){$(visActive).css("visibility","hidden"),$(visNext).css("left",""+pleftmid+"px"),$(visNext).css("width","2px"),$(visNext).css("visibility","visible"),$(visNext).animate({left:"-="+iw2+"px",width:""+iw+"px"},{queue:!0,duration:300,start:function(){},progress:function(animation,progress){},complete:function(){}})}})},self.doAnimationTo=function(clickEeventIndex,imgIndex){var stoneId0=self.gameResources.stoneId0[clickEeventIndex],stoneId1=self.gameResources.stoneId1[clickEeventIndex],stoneId2=self.gameResources.stoneId2[clickEeventIndex],stoneId3=self.gameResources.stoneId3[clickEeventIndex],stoneId4=self.gameResources.stoneId4[clickEeventIndex],stoneId5=self.gameResources.stoneId5[clickEeventIndex];self.doAnimation(imgIndex,clickEeventIndex,stoneId0,stoneId1,stoneId2,stoneId3,stoneId4,stoneId5)},self.doImageSwitch=function(column,row,imageindex){var index=row*self.gameResources.stoneMaxCol+column;if(index>=self.gameResources.maxImageCount||0>imageindex||imageindex>=6)return void alert("some variable out of range! column: "+column+", row: "+row+" imageindex: "+imageindex);var stoneIdVisible,stoneId0=self.gameResources.stoneId0[index],stoneId1=self.gameResources.stoneId1[index],stoneId2=self.gameResources.stoneId2[index],stoneId3=self.gameResources.stoneId3[index],stoneId4=self.gameResources.stoneId4[index],stoneId5=self.gameResources.stoneId5[index];switch(imageindex){case 0:stoneIdVisible=self.gameResources.stoneId0[index];break;case 1:stoneIdVisible=self.gameResources.stoneId1[index];break;case 2:stoneIdVisible=self.gameResources.stoneId2[index];break;case 3:stoneIdVisible=self.gameResources.stoneId3[index];break;case 4:stoneIdVisible=self.gameResources.stoneId4[index];break;default:stoneIdVisible=self.gameResources.stoneId5[index]}$("#"+stoneId0).css("visibility","hidden"),$("#"+stoneId1).css("visibility","hidden"),$("#"+stoneId2).css("visibility","hidden"),$("#"+stoneId3).css("visibility","hidden"),$("#"+stoneId4).css("visibility","hidden"),$("#"+stoneId5).css("visibility","hidden");var iw=self.gameResources.stoneWidth[index],ix=self.gameResources.stoneX[index],$stoneIdVisible=$("#"+stoneIdVisible);$stoneIdVisible.css("left",""+ix+"px"),$stoneIdVisible.css("width",""+iw+"px"),$stoneIdVisible.css("visibility","visible")},$(".pair-flip-image").click(function(event){for(var index=-1,i=0;i<self.gameResources.maxImageCount;i++)if(this.id===self.gameResources.stoneId0[i]||this.id===self.gameResources.stoneId1[i]||this.id===self.gameResources.stoneId2[i]||this.id===self.gameResources.stoneId3[i]||this.id===self.gameResources.stoneId4[i]||this.id===self.gameResources.stoneId5[i]){index=i;break}self.appGameStateService.eventTrySetStone(index),self.updateCardLayout()})},appCardGameService=new AppCardGameService;return appCardGameService}])}(),function(){var app=angular.module("ApplicationModule");app.factory("AppStatisticService",[function(){var AppStatisticService=function(){var self=this;self.inStatisticPage=!1,self.highscores=[],self.setHighscores=function(highscores){self.highscores=highscores}},appStatisticService=new AppStatisticService;return appStatisticService}])}(),function(){var app=angular.module("ApplicationModule");app.controller("ApplicationMainCtrl",["$scope","$window","$timeout","AppScreenService","AppGameStateService","AppCardGameService","AppStatisticService","AppSetupService","AppAuthenticationService","AppOnlineService",function($scope,$window,$timeout,appScreenService,appGameStateService,appCardGameService,appStatisticService,appSetupService,appAuthenticationService,appOnlineService){var self=this;self.appScreenService=appScreenService,self.appGameStateService=appGameStateService,self.appCardGameService=appCardGameService,self.appStatisticService=appStatisticService,self.appSetupService=appSetupService,self.appAuthenticationService=appAuthenticationService,self.appOnlineService=appOnlineService,self.appLastGameMode="",self.userLeftInfoText="",self.userRightInfoText="",self.gameCanceled=!1,self.localTowPlayerGame=function(){self.appScreenService.switchToScreen("game-screen-id"),self.appGameStateService.startTowPlayerGame(),self.appCardGameService.updateCardLayout(),self.appScreenService.switchToLocalMode(),self.appScreenService.resizeHandler(),self.appLastGameMode="LocalTowPlayer",self.userLeftInfoText="Spieler 1",self.userRightInfoText="Spieler 2"},self.localPlayWithComputer=function(){self.appScreenService.switchToScreen("game-screen-id"),self.appGameStateService.startGameWithComputer(),self.appCardGameService.updateCardLayout(),self.appScreenService.switchToComputerMode(),self.appScreenService.resizeHandler(),self.appLastGameMode="LocalComputer",self.userLeftInfoText="Spieler",self.userRightInfoText="Computer"},self.onlinePlay=function(){self.appScreenService.switchToScreen("login-screen-id"),self.appScreenService.resizeHandler(),self.appLastGameMode="OnlinePlay",void 0===self.appOnlineService.socket&&self.appOnlineService.connect()},self.playerLogin=function(){self.appAuthenticationService.login()},self.switchToPlayerRegisterDialog=function(){self.appScreenService.switchToScreen("register-screen-id")},self.playerRegister=function(){self.appAuthenticationService.register()},self.goBack=function($event){switch(self.appScreenService.lastScreenSwitch){case"statistic-screen-id":self.appScreenService.switchToScreen("statistic-screen-id",self.appLastGameMode,!0);break;case"setup-screen-id":self.appScreenService.switchToScreen("setup-screen-id",self.appLastGameMode,!0);break;case"help-screen-id":self.appScreenService.switchToScreen("help-screen-id",self.appLastGameMode,!0)}},$("#header-img-info-id").click(function(){self.appScreenService.switchToScreen("help-screen-id")}),$("#header-img-setup-id").click(function(){self.appScreenService.switchToScreen("setup-screen-id")}),$("#header-img-statistic-id").click(function(){self.appScreenService.switchToScreen("statistic-screen-id")}),$("#header-img-home-id").click(function(){self.appScreenService.switchToScreen("startup-screen-id",self.appLastGameMode),"none"!==self.appOnlineService.onlineState&&self.appOnlineService.stopPlay(),self.appLastGameMode=""}),$("#modal-dialog").on("hidden.bs.modal",function(e){console.log("modal dialog is done."),self.appScreenService.switchToScreen("startup-screen-id")}),$("#modal-colored-dialog").on("hidden.bs.modal",function(e){console.log("modal colored dialog is done."),self.gameCanceled===!0&&self.appScreenService.switchToScreen("startup-screen-id"),self.gameCanceled=!1}),angular.element($window).bind("resize",function(){return self.appScreenService.resizeHandler(),self.appCardGameService.resizeCardLayout(),self.appCardGameService.updateCardLayout(),$scope.$apply()}),$scope.$on("update-card-layout",function(event,args){self.appCardGameService.updateCardLayout()}),$scope.$on("online-game-beginning",function(event,args){self.appScreenService.switchToScreen("game-screen-id"),self.appCardGameService.updateCardLayout(),self.appScreenService.resizeHandler()}),$scope.$on("signInUnknownUser",function(event,args){self.appScreenService.switchToScreen("login-screen-id"),self.appAuthenticationService.showColoredMessage("Eingabe Fehler","Unbekannter Name.","#e81e1a")}),$scope.$on("signInWrongPw",function(event,args){self.appScreenService.switchToScreen("login-screen-id"),self.appAuthenticationService.showColoredMessage("Eingabe Fehler","Falsches Password.","#e81e1a")}),$scope.$on("registerNameOccupied",function(event,args){self.appScreenService.switchToScreen("register-screen-id"),self.appAuthenticationService.showColoredMessage("Eingabe Fehler","Name bereits benutzt.","#e81e1a")}),$scope.$on("signInOk",function(event,args){console.info("you successfully signed in"),self.appScreenService.switchToScreen("wait-online-game-screen-id")}),$scope.$on("registerOk",function(event,args){console.info("you successfully registered."),self.appScreenService.switchToScreen("wait-online-game-screen-id")}),$scope.$on("onlineStartPlayer",function(event,args){console.log("$scope.$on('onlineStartPlayer'...);"),self.appGameStateService.startOnlineGame("StartPlayer"),self.appScreenService.switchToOnlineMode("StartPlayer"),self.appScreenService.resizeHandler(),self.appCardGameService.updateCardLayout()}),$scope.$on("onlineStartOpponent",function(event,args){console.log("$scope.$on('onlineStartOpponent'...);"),self.appGameStateService.startOnlineGame("StartOpponent"),self.appScreenService.switchToOnlineMode("StartOpponent"),self.appScreenService.resizeHandler(),self.appCardGameService.updateCardLayout()}),$scope.$on("play",function(event,args){console.log("$scope.$on('onlineStartOpponent' col: "+args.col+", row: "+args.row+");");var eventIndex=8*args.row+args.col;self.appGameStateService.eventTrySetStone(eventIndex,!0),self.appCardGameService.updateCardLayout()}),$scope.$on("stopPlay",function(event,args){console.log("$scope.$on('stopPlay');"),self.appGameStateService.gameLogic.isGameOver()||(self.appAuthenticationService.showColoredMessage("Spielabbruch","Gegner hat Spiel beendet.","#e81e1a"),self.gameCanceled=!0)}),$scope.$on("connected",function(event,args){console.log("$scope.$on('connected');"),self.appStatisticService.inStatisticPage&&self.appOnlineService.ranking()}),$scope.$on("userData",function(event,args){console.log("$scope.$on('userData', .....);"),self.appOnlineService.onlineStartPlayer?(console.log("$scope.$on('userData', .....), self.appOnlineService.onlineStartPlayer: "+self.appOnlineService.onlineStartPlayer),self.userRightInfoText=args.data.name,self.userLeftInfoText=self.appAuthenticationService.userData.name,self.appScreenService.setOnlinePlayerImage(self.appSetupService.localUserImageWhite),self.appScreenService.setOnlineOpponentImage(args.data.pic)):(console.log("$scope.$on('userData', .....), self.appOnlineService.onlineStartOpponent: "+self.appOnlineService.onlineStartOpponent),self.userLeftInfoText=args.data.name,self.userRightInfoText=self.appAuthenticationService.userData.name,self.appScreenService.setOnlinePlayerImage(args.data.pic),self.appScreenService.setOnlineOpponentImage(self.appSetupService.localUserImageWhite))}),$scope.$on("ranking",function(event,args){console.log("$scope.$on('ranking', ....);"),self.appStatisticService.setHighscores(args)}),self.appScreenService.switchToScreen("startup-screen-id"),self.appScreenService.imageBlinkingStart(),self.appScreenService.resizeHandler(),self.appCardGameService.resizeCardLayout()}])}(),function(){var app=angular.module("ApplicationModule");app.factory("AppOnlineService",["$rootScope","AppSetupService",function($rootScope,appSetupService){var AppOnlineService=function(){var self=this;self.appSetupService=appSetupService,self.userData={name:"",password:"",password2:""},self.onlineState="none",self.onlineStartPlayer=!1,self.onlineStartOpponent=!1,self.socket,self.lastStart,self.lastQuit,self.lastRound=null,self.countRound=0,self.connect=function(){self.socket=io.connect("http://localhost:3000",{forceNew:!0}),self.socket.heartbeatTimeout=2e4,self.socket.on("connected",function(data){self.user=data,console.info("successfully connected to the server"),$rootScope.$broadcast("connected")}),self.socket.on("signInOk",function(){console.info("you successfully signed in"),$rootScope.$broadcast("signInOk"),self.startPlay()}),self.socket.on("signInWrongPw",function(){console.info("your password is not correct"),$rootScope.$broadcast("signInWrongPw")}),self.socket.on("signInUnknownUser",function(){console.info("this username is not known"),$rootScope.$broadcast("signInUnknownUser")}),self.socket.on("registerOk",function(){console.info("you successfully registered"),$rootScope.$broadcast("registerOk"),self.startPlay()}),self.socket.on("registerNameOccupied",function(){console.info("this username is no more available"),$rootScope.$broadcast("registerNameOccupied")}),self.socket.on("wait",function(){console.info("waiting for opponent"),self.onlineState="connect"}),self.socket.on("startPlay",function(data){self.user=data,self.onlineState="startPlay",self.countRound=0,self.lastQuit=null,console.info("online game beginning"),$rootScope.$broadcast("online-game-beginning"),self.user.id!=self.lastStart&&(self.socket.emit("userData",{to:self.user.opponent,name:self.user.name,pic:self.appSetupService.localUserImageWhite}),self.lastStart=self.user.id,0==self.user.role?(self.onlineStartPlayer=!0,console.info("it's your turn"),$rootScope.$broadcast("onlineStartPlayer")):(self.onlineStartOpponent=!0,console.info("waiting for opponent to  start the game"),$rootScope.$broadcast("onlineStartOpponent")))}),self.socket.on("play",function(data){self.countRound++,self.countRound==data.round&&self.lastRound!=data.round&&(self.lastRound=data.round,console.info("your online opponent played in row "+data.row),$rootScope.$broadcast("play",{col:data.col,row:data.row}))}),self.socket.on("userData",function(data){0==self.user.role?console.info("userDataPlayer 2 has the name"+data.name):console.info("Player 1 has the name"+data.name),$rootScope.$broadcast("userData",{data:data,user:self.user})}),self.socket.on("stopPlay",function(){self.user.id!=self.lastQuit&&(self.lastQuit=self.user.id,self.onlineState="none",self.onlineStartPlayer=!1,self.onlineStartOpponent=!1,console.info("your opponent has left the game"),$rootScope.$broadcast("stopPlay"))}),self.socket.on("ranking",function(data){$rootScope.$broadcast("ranking",data)})},self.signIn=function(name,password){self.userData.name=name,self.userData.password=password,self.socket.emit("signIn",{name:name,password:password})},self.register=function(name,password){self.userData.name=name,self.userData.password=password,self.socket.emit("register",{name:name,password:password})},self.startPlay=function(){self.lastStart=null,self.socket.emit("startPlay")},self.play=function(row,col){self.countRound++,self.socket.emit("play",{to:self.user.opponent,row:row,col:col,round:self.countRound})},self.stopPlay=function(){self.socket.emit("stopPlay")},self.ranking=function(){self.socket.emit("ranking")},self.rankingUpdate=function(name,password,gamesWon,pointsWon){self.socket.emit("rankingUpdate",{id:self.user.id,name:name,password:password,gamesWon:gamesWon,pointsWon:pointsWon})}},appOnlineService=new AppOnlineService;return appOnlineService}])}();